{"version":3,"file":"static/js/173.acefb81a.chunk.js","mappings":"6ZAGO,IAAMA,EAAW,SAACC,GACrB,MAAO,CACHC,KAAM,SACNC,QAASF,IAKJG,EAAgB,SAACH,GAC1B,MAAO,CACHC,KAAM,SACNC,QAASF,IAKJI,EAAU,SAACJ,GACpB,MAAO,CACHC,KAAM,OACNC,QAASF,IAKJK,EAAU,SAACL,GACpB,MAAO,CACHC,KAAM,UACNC,QAASF,IAKJM,EAAa,SAACN,GACvB,MAAO,CACHC,KAAM,aACNC,QAASF,IAIJO,EAAS,SAACP,GACnB,MAAO,CACHC,KAAM,YACNC,QAASF,IAIJQ,EAAS,SAACR,GACnB,MAAO,CACHC,KAAM,YACNC,QAASF,IAIJS,EAAU,SAACT,GACpB,MAAO,CACHC,KAAM,aACNC,QAASF,IAIJU,EAAS,SAACV,GACnB,MAAO,CACHC,KAAM,SACNC,QAASF,IAKJW,EAAY,SAACX,GACtB,MAAO,CACHC,KAAM,YACNC,QAASF,IAKJY,EAAiB,SAACZ,GAC3B,MAAO,CACHC,KAAM,iBACNC,QAASF,IAIJa,EAAU,SAACb,GACpB,MAAO,CACHC,KAAM,aACNC,QAASF,K,mJCjFF,SAASc,IAItB,IAAMC,GAAWC,EAAAA,EAAAA,MAGXC,GAAQC,EAAAA,EAAAA,KAAY,SAAAD,GAAK,OAAGA,EAAME,SAGlCC,EAAQC,EAAAA,YAAiB,SAAeC,EAAOC,GACnD,OAAO,SAAC,KAAD,QAAUC,UAAW,EAAGD,IAAKA,EAAKE,QAAQ,UAAaH,OAGhE,OACE,+BAEkB,IAAfL,EAAMS,OACL,SAAC,IAAD,CAAUC,UAAU,WAAWD,KAAMT,EAAMS,KAAME,iBAAkB,IAAMC,QAAS,kBAAMd,GAAShB,EAAAA,EAAAA,IAAS,CAAE2B,MAAM,EAAOD,QAAS,KAAMK,QAAS,SAAjJ,UACE,SAACV,EAAD,CAAOO,UAAY,QAAQE,QAAS,kBAAMd,GAAShB,EAAAA,EAAAA,IAAS,CAAE2B,MAAM,EAAOD,QAAS,KAAMK,QAAS,SAAUC,SAAUd,EAAMQ,QAASO,GAAI,CAAEC,MAAO,QAAnJ,SACGhB,EAAMiB","sources":["Redux/action/action.js","components/utility/SnakBar.js"],"sourcesContent":["// This file has all the possible action in App\n\n// Actions for Alert\nexport const setAlert = (parameters) => {\n    return {\n        type: 'NOTIFY',\n        payload: parameters\n    }\n}\n\n// Actions for Login Modal Box\nexport const setLoginModal = (parameters) => {\n    return {\n        type: 'LOGBOX',\n        payload: parameters\n    }\n}\n\n// Action for Authentication \nexport const setAuth = (parameters) => {\n    return {\n        type: 'AUTH',\n        payload: parameters\n    }\n}\n\n// Action for add item Cart \nexport const addItem = (parameters) => {\n    return {\n        type: 'ADDITEM',\n        payload: parameters\n    }\n}\n\n// Action for remove item Cart \nexport const removeItem = (parameters) => {\n    return {\n        type: 'REMOVEITEM',\n        payload: parameters\n    }\n}\n// Action for INCREMENT in Product Quantity \nexport const addQTY = (parameters) => {\n    return {\n        type: 'INCREMENT',\n        payload: parameters\n    }\n}\n// Action for DECREMENT in Product Quantity \nexport const subQTY = (parameters) => {\n    return {\n        type: 'DECREMENT',\n        payload: parameters\n    }\n}\n// Action for setting cart while customer logged in \nexport const setCart = (parameters) => {\n    return {\n        type: 'PRESETCART',\n        payload: parameters\n    }\n}\n// Action for thanks after order completion \nexport const thanks = (parameters) => {\n    return {\n        type: 'THANKS',\n        payload: parameters\n    }\n}\n\n// Action for setting wishlist  \nexport const addToList = (parameters) => {\n    return {\n        type: 'ADDTOLIST',\n        payload: parameters\n    }\n}\n\n// Action for setting wishlist\nexport const removeFromList = (parameters) => {\n    return {\n        type: 'REMOVEFROMLIST',\n        payload: parameters\n    }\n}\n// Action for setting wishlist\nexport const setList = (parameters) => {\n    return {\n        type: 'PRESETLIST',\n        payload: parameters\n    }\n}\n\n","import React from 'react';\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert from '@mui/material/Alert';\n// Redux\nimport {useDispatch,useSelector} from 'react-redux'\n// Action \nimport {setAlert} from '../../Redux/action/action'\n\nexport default function SnackBar() {\n\n  // const { state, dispatch } = Store();\n\n  const dispatch = useDispatch();\n  \n  // getting state\n  const state = useSelector(state=> state.alert)\n\n  \n  const Alert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n  });\n\n  return (\n    <>\n    {/* {console.log(state)} */}\n      {state.open === true &&\n        <Snackbar className='snackbar' open={state.open} autoHideDuration={3000} onClose={() => dispatch(setAlert({ open: false, variant: null, massage: null }))}>\n          <Alert className = 'alert' onClose={() => dispatch(setAlert({ open: false, variant: null, massage: null }))} severity={state.variant} sx={{ width: '100%'  }}>\n            {state.message}\n          </Alert>\n        </Snackbar>\n      }\n    </>\n  )\n}\n\n// error warning info success\n"],"names":["setAlert","parameters","type","payload","setLoginModal","setAuth","addItem","removeItem","addQTY","subQTY","setCart","thanks","addToList","removeFromList","setList","SnackBar","dispatch","useDispatch","state","useSelector","alert","Alert","React","props","ref","elevation","variant","open","className","autoHideDuration","onClose","massage","severity","sx","width","message"],"sourceRoot":""}