{"version":3,"file":"static/js/497.c926cc7e.chunk.js","mappings":"icA8DA,SAASA,IACP,IAAMC,GAASC,EAAAA,EAAAA,KACTC,GAAOC,EAAAA,EAAAA,GAAgBH,EAAQI,EAAAA,IAC/BC,GAAYF,EAAAA,EAAAA,GAAgBH,EAAQM,EAAAA,IAE1C,OACE,SAACC,EAAA,EAAD,CACEC,MAAM,UACNC,MAAOJ,EACPH,KAAMA,EAAO,EACbQ,SAAU,SAACC,EAAOC,GAAR,OAAkBZ,EAAOa,QAAQC,QAAQF,EAAQ,MAKjE,IAkbA,EAlba,SAACG,GAMZ,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAQC,EAAAA,EAAAA,KAAY,SAAAD,GAAK,OAAIA,KAGnC,GAAsBE,EAAAA,EAAAA,UAAS,IAA/B,eAAOC,EAAP,KAAYC,EAAZ,KACA,GAA8BF,EAAAA,EAAAA,UAAS,OAAvC,eACA,GADA,WACwBA,EAAAA,EAAAA,UACtB,CACEG,MAAO,EACPC,SAAU,KAHd,eAAOC,EAAP,KAAaC,EAAb,MASAC,EAAAA,EAAAA,YAAU,YAERC,EAAAA,EAAAA,IAAWC,KAAKC,UAAUZ,EAAMa,KAAKC,MAAMC,KAAI,SAACC,GAAW,OAAOA,EAAKC,gBACpEC,MAAK,SAACC,GAGLf,EACEe,EAASZ,KAAKQ,KAAI,SAACK,EAASC,GAC1B,IAAIC,EAAWF,EAAQ,GAAGG,WAAWC,OAAS,IAAMJ,EAAQ,GAAGK,eAAiBL,EAAQ,GAAGG,WAAW,GAAGE,eAAiBL,EAAQ,GAAGK,eAAiBL,EAAQ,GAAGG,WAAW,GAAGE,gBAE/K,MAAO,CACLC,GAAIL,EAAQ,EACZM,IAAKP,EAAQ,GAAGO,IAChBC,QAASR,EAAQ,GAAGS,gBAAkBT,EAAQ,GAAGU,cAAc,GAC/DC,aAAcX,EAAQ,GAAGY,cACzBC,MAAOjC,EAAMa,KAAKC,MAAMoB,QAAO,SAAC3B,GAAW,OAAOA,EAAKU,aAAeG,EAAQ,GAAGO,OAAO,GAAGQ,SAAWf,EAAQ,GAAGgB,cACjHC,IAAKrC,EAAMa,KAAKC,MAAMoB,QAAO,SAAC3B,GAAW,OAAOA,EAAKU,aAAeG,EAAQ,GAAGO,OAAO,GAAGQ,SACzF9B,MAAOL,EAAMa,KAAKC,MAAMoB,QAAO,SAAC3B,GAAW,OAAOA,EAAKU,aAAeG,EAAQ,GAAGO,OAAO,GAAGQ,SAAWf,EAAQ,GAAGgB,cAAiBpC,EAAMa,KAAKC,MAAMoB,QAAO,SAAC3B,GAAW,OAAOA,EAAKU,aAAeG,EAAQ,GAAGO,OAAO,GAAGQ,SAAWf,EAAQ,GAAGgB,cAAiB,IAAMd,EACnQgB,OAAQlB,EAAQ,GAAGO,cAM5B,CAAC3B,EAAMa,QAGVJ,EAAAA,EAAAA,YAAU,WAERD,EAAQ,CACNH,MAAOF,EAAIoC,QAAO,SAACC,EAASC,GAAV,OAAkBD,EAAUE,SAASD,EAAIpC,SAAQ,GACnEC,SAAUH,EAAIoC,QAAO,SAACC,EAASC,GAAV,OAAkBD,EAAUE,SAASD,EAAIR,SAAQ,OAEvE,CAAC9B,IAGJ,IAAMwC,EAAkB,yCAAG,WAAO3B,GAAP,0EAGrBhB,EAAM4C,KAAKC,OAHU,iCAIjBC,EAAAA,EAAAA,IAAe,CACnBC,IAAK/C,EAAM4C,KAAKG,IAChB9B,WAAYD,EAAKW,MAEhBT,MAAK,SAACC,GAIL,OAFArB,GAASkD,EAAAA,EAAAA,IAAWhC,EAAKW,MAElB7B,GAASmD,EAAAA,EAAAA,IAAS,CACvBC,QAAS,UACTC,QAAShC,EAASZ,KAAK4C,QACvBC,MAAM,QAGTC,OAAM,SAACC,GACN,OAAOxD,GAASmD,EAAAA,EAAAA,IAAS,CACvBC,QAAS,QACTC,QAAS,2BACTC,MAAM,QAtBW,oCA4BvBtD,GAASkD,EAAAA,EAAAA,IAAWhC,EAAKW,MA5BF,kBA8BhB7B,GAASmD,EAAAA,EAAAA,IAAS,CACvBC,QAAS,UACTC,QAAS,qCACTC,MAAM,MAjCe,2CAAH,sDAgElBG,EAAU,CACd,CAAEC,MAAO,KAAMC,aAAc,kBAAM,4BAAS,UAAkBC,MAAO,IACrE,CAAEF,MAAO,MAAOC,aAAc,kBAAM,4BAAS,SAAiBC,MAAO,KACrE,CACEF,MAAO,UACPG,MAAO,SACPD,MAAO,IACPD,aAAc,kBAAM,4BAAS,aAC7BG,WAAY,SAACC,GAAD,OACV,SAACC,EAAA,EAAD,CAAKC,UAAWC,EAAAA,GAAMC,GAAE,mBAAcJ,EAAO1D,IAAIwB,IAAzB,YAAgCkC,EAAO1D,IAAI4B,cAAnE,cAC6BmC,IAA1BL,EAAOM,gBACN,gBAAKC,UAAU,eAAeC,IAAKR,EAAOM,gBAAkBG,EAAAA,EAAYC,IAAI,cAE5E,gBAAKH,UAAU,eAAeC,IAAKC,EAAAA,EAAYC,IAAI,iBAK3D,CACEf,MAAO,eACPC,aAAc,kBAAM,4BAAS,kBAC7BC,MAAO,KAET,CACEF,MAAO,QACPC,aAAc,kBAAM,4BAAS,mBAC7Be,KAAM,SACNd,MAAO,IACPC,MAAO,UAGT,CACEH,MAAO,MACPC,aAAc,kBAAM,4BAAS,cAC7BC,MAAO,IACPE,WAAY,SAACC,GAAD,OACV,UAACY,EAAA,GAAD,CAAMC,WAAS,EAACN,UAAU,aAA1B,WACE,SAACK,EAAA,GAAD,CAAMzD,MAAI,EAAC2D,GAAI,GAAIC,GAAI,EAAvB,UACE,SAACC,EAAA,EAAD,CACEC,QAAS,kBA3DGC,EA2DkB,CAAE9D,WAAY4C,EAAO1D,IAAIwB,IAAKQ,SAAU0B,EAAO1D,IAAIkC,UA1DvFrC,EAAM4C,KAAKC,QACbmC,EAAAA,EAAAA,IAAe,CAAEjC,IAAK/C,EAAM4C,KAAKG,IAAK9B,WAAY8D,EAAE9D,WAAYkB,SAAUO,SAASqC,EAAE5C,UAAY,IAC9FjB,MAAK,WACJpB,GAASmF,EAAAA,EAAAA,IAAOF,EAAE9D,gBAGnBnB,GAASmF,EAAAA,EAAAA,IAAOF,EAAE9D,cAPF,IAAC8D,GA4DZ7B,QAAQ,WAAWgC,KAAK,QAF1B,kBAMF,SAACT,EAAA,GAAD,CAAMzD,MAAI,EAAC2D,GAAI,GAAIC,GAAI,EAAvB,UACE,SAACO,EAAA,EAAD,CAAYjC,QAAQ,OAApB,SAA4BW,EAAOM,oBAErC,SAACM,EAAA,GAAD,CAAMzD,MAAI,EAAC2D,GAAI,GAAIC,GAAI,EAAvB,UACE,SAACC,EAAA,EAAD,CACEC,QAAS,kBA3DGC,EA2DkB,CAAE9D,WAAY4C,EAAO1D,IAAIwB,IAAKQ,SAAU0B,EAAO1D,IAAIkC,UA1DvFrC,EAAM4C,KAAKC,QACbmC,EAAAA,EAAAA,IAAe,CAAEjC,IAAK/C,EAAM4C,KAAKG,IAAK9B,WAAY8D,EAAE9D,WAAYkB,SAAUO,SAASqC,EAAE5C,UAAY,IAC9FjB,MAAK,WACJpB,GAASsF,EAAAA,EAAAA,IAAOL,EAAE9D,gBAGnBnB,GAASsF,EAAAA,EAAAA,IAAOL,EAAE9D,cAPF,IAAC8D,GA4DZ7B,QAAQ,WAAWgC,KAAK,QAF1B,sBASR,CACE1B,MAAO,QACPC,aAAc,kBAAM,4BAAS,WAC7Be,KAAM,SACNd,MAAO,IACPC,MAAO,UAGT,CACEH,MAAO,SACPC,aAAc,kBAAM,4BAAS,YAC7B4B,WAAY,UACZ3B,MAAO,GACPE,WAAY,SAACC,GAAD,OACV,gBAAKO,UAAU,gBAAf,UACE,SAACkB,EAAA,EAAD,CAAYR,QAAS,WACnBnC,EAAmB,CAAEhB,IAAKkC,EAAOM,iBAAkBjD,MAAK,SAACqE,GACvDnF,EAAOD,EAAI+B,QAAO,SAACO,GACjB,OAAOA,EAAIH,SAAWuB,EAAOM,mBAE/BrE,GAASmD,EAAAA,EAAAA,IAAS,CAChBG,MAAM,EACNF,QAAS,UACTC,QAAS,0BAGZ,aAAW,SAXd,UAYE,SAACqC,EAAA,EAAD,WAmCV,OACE,iCAEE,UAACC,EAAA,EAAD,YACE,qCACA,iBAAMC,KAAK,cAAcC,QAAQ,yCAKnC,SAAClB,EAAA,GAAD,CAAMC,WAAS,EAACN,UAAU,SAA1B,UACE,SAACK,EAAA,GAAD,CAAMzD,MAAI,EAAC2D,GAAI,GAAf,UACE,SAACQ,EAAA,EAAD,CAAYjC,QAAQ,KAApB,uBAKJ,UAACuB,EAAA,GAAD,CAAMC,WAAS,EAACN,UAAU,UAA1B,WACE,SAACK,EAAA,GAAD,CAAMzD,MAAI,EAAC2D,GAAI,GAAf,UACE,SAACQ,EAAA,EAAD,CAAYjC,QAAQ,KAApB,6BAEF,SAACuB,EAAA,GAAD,CAAMzD,MAAI,EAAC2D,GAAI,GAAIP,UAAU,iBAAiBQ,GAAI,IAAlD,UA5CF,gBAAKgB,MAAO,CAAEC,OAAQ,QAASnC,MAAO,QAAtC,UACE,SAACoC,EAAA,EAAD,CACEC,GAAI,CACFC,WAAY,IACZC,SAAU,QAEZC,KAAM/F,EACNoD,QAASA,EACT4C,SAAU,EACVC,aAAc,kBAAM,KACpBC,mBAAoB,CAAC,GACrBC,yBAAuB,EACvBC,mBAAiB,EACjBC,WAAY,CACVnH,WAAYR,UAmChB,SAAC4F,EAAA,GAAD,CAAMzD,MAAI,EAAC2D,GAAI,GAAIP,UAAU,iBAAiBQ,GAAI,IAAlD,UACE,SAACH,EAAA,GAAD,CAAMC,WAAS,EAAf,UACE,UAACD,EAAA,GAAD,CAAMzD,MAAI,EAAC2D,GAAI,GAAf,WACE,SAACQ,EAAA,EAAD,CAAYjC,QAAQ,KAApB,yBACA,UAACuB,EAAA,GAAD,CAAMC,WAAS,EAACN,UAAU,aAA1B,WAyFE,UAACK,EAAA,GAAD,CAAMzD,MAAI,EAAC2D,GAAI,GAAIP,UAAU,YAA7B,WACE,SAACe,EAAA,EAAD,CAAYjC,QAAQ,QAApB,gDAGA,mBACA,iBAAKkB,UAAU,WAAf,WACE,SAACqC,EAAA,EAAD,CAAWvB,KAAK,QAAQhC,QAAQ,WAAWwD,MAAM,iBACjD,SAAC7B,EAAA,EAAD,CAAQkB,GAAI,CAAEC,WAAY,OAASd,KAAK,QAAQhC,QAAQ,YAAxD,0BAMJ,SAACuB,EAAA,GAAD,CAAMsB,GAAI,CAAEY,GAAI,EAAGC,GAAI,GAAK5F,MAAI,EAAC2D,GAAI,GAArC,UACE,SAACkC,EAAA,EAAD,OAEF,UAACpC,EAAA,GAAD,CAAMzD,MAAI,EAAC2D,GAAI,GAAIP,UAAU,WAA7B,WACE,SAACe,EAAA,EAAD,CAAYjC,QAAQ,OAApB,2BACA,UAACiC,EAAA,EAAD,CAAYjC,QAAQ,OAApB,UAA4BlD,EAAMa,KAAKC,MAAMU,OAA7C,eAEF,UAACiD,EAAA,GAAD,CAAMzD,MAAI,EAAC2D,GAAI,GAAIP,UAAU,WAA7B,WACE,SAACe,EAAA,EAAD,CAAYjC,QAAQ,OAApB,uBACA,UAACiC,EAAA,EAAD,CAAYjC,QAAQ,OAApB,gBAA+B3C,EAAKD,SAAWC,EAAKF,OAAOyG,eAAe,QAAS,CACjFlB,MAAO,WACPmB,SAAU,eAGd,UAACtC,EAAA,GAAD,CAAMzD,MAAI,EAAC2D,GAAI,GAAIP,UAAU,WAA7B,WACE,SAACe,EAAA,EAAD,CAAYjC,QAAQ,OAApB,uBACA,SAACiC,EAAA,EAAD,CAAYjC,QAAQ,OAApB,SAA4B3C,EAAKD,SAASwG,eAAe,QAAS,CAChElB,MAAO,WACPmB,SAAU,cAGd,UAACtC,EAAA,GAAD,CAAMsB,GAAI,CAAEY,GAAI,GAAK3F,MAAI,EAAC2D,GAAI,GAA9B,WACE,SAACkC,EAAA,EAAD,KACA,sBAGF,UAACpC,EAAA,GAAD,CAAMzD,MAAI,EAAC2D,GAAI,GAAIP,UAAU,QAA7B,WACE,SAACe,EAAA,EAAD,CAAYjC,QAAQ,QAApB,oBACA,SAACiC,EAAA,EAAD,CAAYjC,QAAQ,QAApB,SAA6B3C,EAAKF,MAAMyG,eAAe,QAAS,CAC9DlB,MAAO,WACPmB,SAAU,cAGd,SAACtC,EAAA,GAAD,CAAMzD,MAAI,EAAC2D,GAAI,GAAf,UACE,SAACkC,EAAA,EAAD,OAEF,SAACpC,EAAA,GAAD,CAAMzD,MAAI,EAAC2D,GAAI,GAAf,UACE,SAACE,EAAA,EAAD,CAAQmC,SAAU7G,EAAIqB,QAAU,EAAkBsD,QAAS,WACzDjF,EAAMoH,QAAQ,YACZ,CACEjH,MAAO,CACLK,MAAOE,EAAKF,MACZC,SAAUC,EAAKD,SACf6B,SAAUhC,EAAIoC,QAAO,SAAC2E,EAASzE,GAAU,OAAO,kBAAKyE,GAAZ,cAAsBzE,EAAId,IAAMc,EAAIJ,QAAS,IACtFT,QAASzB,MAGd4F,GAAI,CAAEC,WAAY,OAAS9C,QAAQ,YAAYiE,WAAS,EAV3D","sources":["components/cart/Cart.js"],"sourcesContent":["// css\nimport \"../../asset/css/cart.css\";\n// react\nimport React, { useEffect, useState } from \"react\";\nimport {\n  Grid,\n  Typography,\n  Button,\n  TextField,\n  Divider,\n  MenuItem,\n  InputAdornment,\n  IconButton,\n  Box\n} from \"@mui/material\";\nimport { Helmet } from \"react-helmet\";\nimport { Link, useParams } from \"react-router-dom\";\n\nimport {\n  DataGrid,\n  gridPageCountSelector,\n  gridPageSelector,\n  useGridApiContext,\n  useGridSelector,\n} from \"@mui/x-data-grid\";\nimport Pagination from \"@mui/material/Pagination\";\n\n// icon\nimport LocationOnOutlinedIcon from \"@mui/icons-material/LocationOnOutlined\";\nimport PublicOutlinedIcon from \"@mui/icons-material/PublicOutlined\";\nimport OutlinedFlagSharpIcon from \"@mui/icons-material/OutlinedFlagSharp\";\nimport DeleteIcon from '@mui/icons-material/Delete';\n// APis services \nimport { getDetails, updateQuantity, removeCartItem, getCartItem } from \"../../service/service\"\nimport defaultIMG from \"../../asset/images/defaultProduct.svg\";\n\n// state global\n// import { Store } from '../store/Context'\n// import { cart, Notify } from \"../store/Types\";\n\n// state Redux\nimport { useDispatch, useSelector } from 'react-redux'\n\n// action \nimport { setCart, removeItem, setAlert, addQTY, subQTY } from '../../Redux/action/action'\n\nconst countries = [\n  {\n    value: \"USD\",\n  },\n  {\n    value: \"EUR\",\n  },\n  {\n    value: \"BTC\",\n  },\n  {\n    value: \"JPY\",\n  },\n];\n\n// pagination\nfunction CustomPagination() {\n  const apiRef = useGridApiContext();\n  const page = useGridSelector(apiRef, gridPageSelector);\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <Pagination\n      color=\"primary\"\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, value) => apiRef.current.setPage(value - 1)}\n    />\n  );\n}\n\nconst Cart = (props) => {\n\n  // global \n  // const { state, dispatch } = Store();\n\n  // Redux \n  const dispatch = useDispatch();\n  // state \n  const state = useSelector(state => state);\n\n  // states \n  const [row, setRow] = useState([])\n  const [country, setCountry] = useState(\"EUR\");\n  const [data, setData] = useState(\n    {\n      total: 0,\n      subtotal: 0\n    }\n  );\n\n\n  // fetching the cart item\n  useEffect(() => {\n    // console.log(state.cart.items)\n    getDetails(JSON.stringify(state.cart.items.map((item) => { return item.product_id })))\n      .then((response) => {\n        // console.log(state.cart.items)\n        // console.log(response)\n        setRow(\n          response.data.map((dataSet, index) => {\n            let discount = dataSet[0].categories.length > 0 && (dataSet[0].discount_limit < dataSet[0].categories[0].discount_limit ? dataSet[0].discount_limit : dataSet[0].categories[0].discount_limit)\n            // console.log(dataSet[0].discount_limit,dataSet[0].categories[0].discount_limit)\n            return {\n              id: index + 1,\n              SKU: dataSet[0].SKU,\n              product: dataSet[0].featured_image || dataSet[0].product_image[0],\n              product_name: dataSet[0].product_title,\n              price: state.cart.items.filter((data) => { return data.product_id === dataSet[0].SKU })[0].quantity * dataSet[0].selling_price,\n              qty: state.cart.items.filter((data) => { return data.product_id === dataSet[0].SKU })[0].quantity,\n              total: state.cart.items.filter((data) => { return data.product_id === dataSet[0].SKU })[0].quantity * dataSet[0].selling_price - (state.cart.items.filter((data) => { return data.product_id === dataSet[0].SKU })[0].quantity * dataSet[0].selling_price) / 100 * discount,\n              action: dataSet[0].SKU\n            }\n          })\n        )\n        // setRow(data.data)\n      })\n  }, [state.cart])\n\n  // for calculating total on value on runtime\n  useEffect(() => {\n\n    setData({\n      total: row.reduce((partial, set) => partial + parseInt(set.total), 0),\n      subtotal: row.reduce((partial, set) => partial + parseInt(set.price), 0),\n    })\n  }, [row])\n\n  // removeItemFromCart \n  const removeItemFromCart = async (item) => {\n\n    // server side \n    if (state.auth.isAuth) {\n      await removeCartItem({\n        CID: state.auth.CID,\n        product_id: item.SKU\n      })\n        .then((response) => {\n          // for client side\n          dispatch(removeItem(item.SKU))\n\n          return dispatch(setAlert({\n            variant: 'warning',\n            message: response.data.message,\n            open: true\n          }))\n        })\n        .catch((err) => {\n          return dispatch(setAlert({\n            variant: 'error',\n            message: 'Something Went Wrong !!!',\n            open: true\n          }))\n        })\n    }\n    else {\n      // for client side\n      dispatch(removeItem(item.SKU))\n\n      return dispatch(setAlert({\n        variant: 'warning',\n        message: 'Item removed added to the cart !!!',\n        open: true\n      }))\n\n    }\n  }\n\n  const handleChange = (event) => {\n    setCountry(event.target.value);\n  };\n\n  // decrease quantity\n  const handleDecrease = (e) => {\n    if (state.auth.isAuth) {\n      updateQuantity({ CID: state.auth.CID, product_id: e.product_id, quantity: parseInt(e.quantity) - 1 })\n        .then(() => {\n          dispatch(subQTY(e.product_id));\n        })\n    }\n    else dispatch(subQTY(e.product_id));\n  }\n  // increase quantity\n  const handleIncrease = (e) => {\n    if (state.auth.isAuth) {\n      updateQuantity({ CID: state.auth.CID, product_id: e.product_id, quantity: parseInt(e.quantity) + 1 })\n        .then(() => {\n          dispatch(addQTY(e.product_id));\n        })\n    }\n    else dispatch(addQTY(e.product_id));\n  }\n  // columns section \n  const columns = [\n    { field: \"id\", renderHeader: () => <strong>{\"S.No\"}</strong>, width: 50 },\n    { field: \"SKU\", renderHeader: () => <strong>{\"SKU\"}</strong>, width: 100 },\n    {\n      field: \"product\",\n      align: \"center\",\n      width: 200,\n      renderHeader: () => <strong>{\"Product\"}</strong>,\n      renderCell: (params) => (\n        <Box component={Link} to={`/details/${params.row.SKU}/${params.row.product_name}`}>\n          {params.formattedValue !== undefined ? (\n            <img className=\"productImage\" src={params.formattedValue || defaultIMG} alt=\"category\" />\n          ) : (\n            <img className=\"productImage\" src={defaultIMG} alt=\"category\" />\n          )}\n        </Box>\n      ),\n    },\n    {\n      field: \"product_name\",\n      renderHeader: () => <strong>{\"Product Name\"}</strong>,\n      width: 200,\n    },\n    {\n      field: \"price\",\n      renderHeader: () => <strong>{\"Price (Rupee)\"}</strong>,\n      type: \"number\",\n      width: 120,\n      align: 'center'\n    },\n\n    {\n      field: \"qty\",\n      renderHeader: () => <strong>{\"Quantity\"}</strong>,\n      width: 150,\n      renderCell: (params) => (\n        <Grid container className=\"qtyButtons\">\n          <Grid item xs={12} md={3}>\n            <Button\n              onClick={() => handleDecrease({ product_id: params.row.SKU, quantity: params.row.qty })}\n              variant=\"outlined\" size=\"small\">\n              -\n            </Button>\n          </Grid>\n          <Grid item xs={12} md={2}>\n            <Typography variant=\"body\">{params.formattedValue}</Typography>\n          </Grid>\n          <Grid item xs={12} md={3}>\n            <Button\n              onClick={() => handleIncrease({ product_id: params.row.SKU, quantity: params.row.qty })}\n              variant=\"outlined\" size=\"small\">\n              +\n            </Button>\n          </Grid>\n        </Grid>\n      ),\n    },\n    {\n      field: \"total\",\n      renderHeader: () => <strong>{\"Total\"}</strong>,\n      type: \"number\",\n      width: 100,\n      align: 'center'\n\n    },\n    {\n      field: \"action\",\n      renderHeader: () => <strong>{\"Remove\"}</strong>,\n      headerName: \"Actions\",\n      width: 70,\n      renderCell: (params) =>\n        <div className=\"categoryImage\" >\n          <IconButton onClick={() => {\n            removeItemFromCart({ SKU: params.formattedValue }).then((res) => {\n              setRow(row.filter((set) => {\n                return set.action !== params.formattedValue;\n              }))\n              dispatch(setAlert({\n                open: true,\n                variant: 'warning',\n                message: 'Item Removed !!!'\n              }))\n            })\n          }} aria-label=\"delete\"  >\n            <DeleteIcon />\n          </IconButton>\n\n        </div>,\n    }\n\n  ];\n\n\n  // data grid view\n  function DataGridView() {\n    return (\n      <div style={{ height: \"450px\", width: \"100%\" }}>\n        <DataGrid\n          sx={{\n            fontWeight: 400,\n            fontSize: '1rem'\n          }}\n          rows={row}\n          columns={columns}\n          pageSize={5}\n          getRowHeight={() => 100}\n          rowsPerPageOptions={[5]}\n          disableSelectionOnClick\n          disableColumnMenu\n          components={{\n            Pagination: CustomPagination,\n          }}\n        />\n      </div>\n    );\n  }\n\n\n\n  return (\n    <>\n      {/* helmet tag  */}\n      <Helmet>\n        <title>Cart</title>\n        <meta name=\"description\" content=\"Woodsala cart and checkout page.\" />\n      </Helmet>\n      {/* helmet tag ends  */}\n\n      {/* Banner */}\n      <Grid container className=\"Banner\">\n        <Grid item xs={12}>\n          <Typography variant=\"h1\">Cart</Typography>\n        </Grid>\n      </Grid>\n      {/* Banner Ends */}\n      {/* Main Section */}\n      <Grid container className=\"mainSec\">\n        <Grid item xs={12}>\n          <Typography variant=\"h4\">Cart Details</Typography>\n        </Grid>\n        <Grid item xs={12} className=\"tableContainer\" md={8.5}>\n          {DataGridView()}\n        </Grid>\n\n        {/* // Cart Totals  */}\n        <Grid item xs={12} className=\"tableContainer\" md={3.5}>\n          <Grid container>\n            <Grid item xs={12}>\n              <Typography variant=\"h5\">Cart Total</Typography>\n              <Grid container className=\"cartTotals\">\n\n                {/* <Grid item xs={12}>\n                  <Typography variant=\"body1\">Shipping</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography variant=\"body2\">Shipping Charges (0)</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <Typography variant=\"body2\">\n                    Shipping To Jaipur 302001, Rajasthan\n                  </Typography>\n                </Grid> */}\n                {/* <Grid item xs={12} className=\"address\">\n                  <Grid container>\n                    <Grid className=\"changeAddress\" item xs={12}>\n                      <LocationOnOutlinedIcon />\n                      <Typography variant=\"body2\">Change Address</Typography>\n                    </Grid>\n                    <Grid item xs={12} sx={{ padding: \"5% 0%\" }}>\n                      <form className=\"fromSec\">\n                        <TextField\n                          select\n                          size=\"small\"\n                          label=\"Country\"\n                          value={country}\n                          fullWidth\n                          onChange={handleChange}\n                          InputProps={{\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                <PublicOutlinedIcon small=\"true\" />\n                              </InputAdornment>\n                            ),\n                          }}\n                        >\n                          {countries.map((option) => (\n                            <MenuItem key={option.value} value={option.value}>\n                              {option.value}\n                            </MenuItem>\n                          ))}\n                        </TextField>\n                        <TextField\n                          select\n                          sx={{ marginTop: \"7%\" }}\n                          size=\"small\"\n                          label=\"State\"\n                          value={country}\n                          fullWidth\n                          onChange={handleChange}\n                          InputProps={{\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                <OutlinedFlagSharpIcon small=\"true\" />\n                              </InputAdornment>\n                            ),\n                          }}\n                        >\n                          {countries.map((option) => (\n                            <MenuItem key={option.value} value={option.value}>\n                              {option.value}\n                            </MenuItem>\n                          ))}\n                        </TextField>\n                        <TextField\n                          label=\"Town/City\"\n                          id=\"outlined-start-adornment\"\n                          sx={{ marginTop: \"7%\" }}\n                          size=\"small\"\n                        />\n                        <TextField\n                          label=\"Pin Code\"\n                          id=\"outlined-start-adornment\"\n                          sx={{ marginTop: \"7%\" }}\n                          size=\"small\"\n                        />\n                        <Button\n                          sx={{ marginTop: \"7%\" }}\n                          small=\"true\"\n                          variant=\"outlined\"\n                        >\n                          Update\n                        </Button>\n                      </form>\n                    </Grid>\n                  </Grid>\n                </Grid> */}\n                {/* coupon section */}\n\n                <Grid item xs={12} className=\"couponBox\">\n                  <Typography variant=\"body1\">\n                    Have Any Coupon Code? Apply here.\n                  </Typography>\n                  <br></br>\n                  <div className=\"applyBox\">\n                    <TextField size=\"small\" variant=\"outlined\" label=\"Coupon Code\" />\n                    <Button sx={{ fontWeight: \"400\" }} size=\"small\" variant=\"contained\">\n                      Apply\n                    </Button>\n                  </div>\n                </Grid>\n                {/* coupon section ends */}\n                <Grid sx={{ mt: 2, mb: 2 }} item xs={12}>\n                  <Divider></Divider>\n                </Grid>\n                <Grid item xs={12} className=\"subTotal\">\n                  <Typography variant=\"body\">Number Items</Typography>\n                  <Typography variant=\"body\">{state.cart.items.length} unit</Typography>\n                </Grid>\n                <Grid item xs={12} className=\"subTotal\">\n                  <Typography variant=\"body\">Discount</Typography>\n                  <Typography variant=\"body\">- {(data.subtotal - data.total).toLocaleString(\"us-Rs\", {\n                    style: \"currency\",\n                    currency: \"INR\",\n                  })}</Typography>\n                </Grid>\n                <Grid item xs={12} className=\"subTotal\">\n                  <Typography variant=\"body\">Subtotal</Typography>\n                  <Typography variant=\"body\">{data.subtotal.toLocaleString(\"us-Rs\", {\n                    style: \"currency\",\n                    currency: \"INR\",\n                  })}</Typography>\n                </Grid>\n                <Grid sx={{ mt: 2 }} item xs={12}>\n                  <Divider></Divider>\n                  <br></br>\n                </Grid>\n\n                <Grid item xs={12} className=\"Total\">\n                  <Typography variant=\"body1\">Total</Typography>\n                  <Typography variant=\"body1\">{data.total.toLocaleString(\"us-Rs\", {\n                    style: \"currency\",\n                    currency: \"INR\",\n                  })}</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                  <Divider></Divider>\n                </Grid>\n                <Grid item xs={12}>\n                  <Button disabled={row.length <= 0 ? true : false} onClick={() => {\n                    props.history(\"/checkout\",\n                      {\n                        state: {\n                          total: data.total,\n                          subtotal: data.subtotal,\n                          quantity: row.reduce((initial, set) => { return { ...initial, [set.SKU]: set.qty } }, {}),\n                          product: row\n                        }\n                      })\n                  }} sx={{ fontWeight: \"500\" }} variant=\"contained\" fullWidth>\n                    Proceed To CheckOut\n                  </Button>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      {/* Main Section Ends */}\n    </>\n  );\n};\n\nexport default Cart;\n"],"names":["CustomPagination","apiRef","useGridApiContext","page","useGridSelector","gridPageSelector","pageCount","gridPageCountSelector","Pagination","color","count","onChange","event","value","current","setPage","props","dispatch","useDispatch","state","useSelector","useState","row","setRow","total","subtotal","data","setData","useEffect","getDetails","JSON","stringify","cart","items","map","item","product_id","then","response","dataSet","index","discount","categories","length","discount_limit","id","SKU","product","featured_image","product_image","product_name","product_title","price","filter","quantity","selling_price","qty","action","reduce","partial","set","parseInt","removeItemFromCart","auth","isAuth","removeCartItem","CID","removeItem","setAlert","variant","message","open","catch","err","columns","field","renderHeader","width","align","renderCell","params","Box","component","Link","to","undefined","formattedValue","className","src","defaultIMG","alt","type","Grid","container","xs","md","Button","onClick","e","updateQuantity","subQTY","size","Typography","addQTY","headerName","IconButton","res","Delete","Helmet","name","content","style","height","DataGrid","sx","fontWeight","fontSize","rows","pageSize","getRowHeight","rowsPerPageOptions","disableSelectionOnClick","disableColumnMenu","components","TextField","label","mt","mb","Divider","toLocaleString","currency","disabled","history","initial","fullWidth"],"sourceRoot":""}