{"version":3,"file":"static/js/826.a76dc6a3.chunk.js","mappings":"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","sources":["components/product/ProductList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport \"react-lazy-load-image-component/src/effects/blur.css\";\n// import Carousel from \"react-multi-carousel\";\n//mui\nimport {\n  Grid,\n  Box,\n  Typography,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Divider,\n  IconButton,\n  Drawer,\n  CircularProgress,\n  Slider,\n  FormControl,\n  Button,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n} from \"@mui/material\";\n\n//css\nimport \"../../asset/css/product.css\";\nimport \"react-multi-carousel/lib/styles.css\";\n\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\n// icon\nimport FavoriteBorderOutlinedIcon from \"@mui/icons-material/FavoriteBorderOutlined\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport AddShoppingCartOutlinedIcon from \"@mui/icons-material/AddShoppingCartOutlined\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport ExpandLessOutlinedIcon from \"@mui/icons-material/ExpandLessOutlined\";\nimport FilterListOutlinedIcon from \"@mui/icons-material/FilterListOutlined\";\nimport ShoppingCartIcon from \"@mui/icons-material/ShoppingCart\";\nimport { Helmet } from \"react-helmet\";\n\n//image\nimport defaultIMG from \"../../asset/images/defaultProduct.svg\";\n\nimport NoProductIMG from \"../../asset/images/productPage/noProductFound.gif\";\n\n// Action\nimport {\n  setAlert,\n  addItem,\n  removeItem,\n  setCart,\n  addToList,\n  removeFromList,\n} from \"../../Redux/action/action\";\n\n// Redux\nimport { useDispatch, useSelector } from \"react-redux\";\n\n// services\nimport {\n  getProducts,\n  addCartItem,\n  removeCartItem,\n  getCartItem,\n  getMartialList,\n  addWshList,\n  removeWshList,\n} from \"../../service/service\";\n\nexport default function ProductList(props) {\n  const [Materials, setMaterials] = useState([]);\n\n  // State\n  const state = useSelector((state) => state);\n\n  // Dispatch\n  const dispatch = useDispatch();\n\n  // history\n  const history = props.history;\n\n  // filter params\n  const filter = useParams();\n\n  // extra filter\n  const [extraFilter, setExtraFilter] = useState({\n    apply: false,\n    material: [],\n  });\n\n  // // responsive oject for Slider\n  // const responsive = {\n  //   desktop: {\n  //     breakpoint: { max: 3000, min: 1024 },\n  //     items: 3,\n  //   },\n  //   tablet: {\n  //     breakpoint: { max: 800, min: 600 },\n  //     items: 2,\n  //   },\n  //   mobile: {\n  //     breakpoint: { max: 600, min: 0 },\n  //     items: 1,\n  //   },\n  // };\n\n  // store\n  // const { state, dispatch } = Store();\n\n  // states\n  const [items, setItems] = useState([]);\n  const [expanded, setExpanded] = useState(\"\");\n\n  // state of the everything\n  const [meta, setMeta] = useState({\n    hasMore: true,\n    page: 1,\n    filter: filter,\n  });\n\n  // State\n  const [filterShow, setFilter] = useState(false);\n\n  // use Effect\n  useEffect(() => {\n    getMartialList().then((row) => {\n      setMaterials(\n        row.data.map((item) => {\n          return item.primaryMaterial_name;\n        })\n      );\n    });\n  }, [state.auth.isAuth]);\n\n  // const categories = [\n  //   {\n  //     image: living,\n  //     name: \"Living\",\n  //     price: 12000,\n  //   },\n  //   {\n  //     image: wfh,\n  //     name: \"Work From Home\",\n  //     price: 15000,\n  //   },\n  //   {\n  //     image: bedroom,\n  //     name: \"Bedroom\",\n  //     price: 20000,\n  //   },\n  //   {\n  //     image: dining,\n  //     name: \"Dining\",\n  //     price: 12000,\n  //   },\n  //   {\n  //     image: living,\n  //     name: \"Living\",\n  //     price: 12000,\n  //   },\n  //   {\n  //     image: wfh,\n  //     name: \"Work From Home\",\n  //     price: 15000,\n  //   },\n  //   {\n  //     image: bedroom,\n  //     name: \"Bedroom\",\n  //     price: 20000,\n  //   },\n  //   {\n  //     image: dining,\n  //     name: \"Dining\",\n  //     price: 12000,\n  //   },\n  //   {\n  //     image: living,\n  //     name: \"Living\",\n  //     price: 12000,\n  //   },\n  //   {\n  //     image: wfh,\n  //     name: \"Work From Home\",\n  //     price: 15000,\n  //   },\n  //   {\n  //     image: bedroom,\n  //     name: \"Bedroom\",\n  //     price: 20000,\n  //   },\n  //   {\n  //     image: dining,\n  //     name: \"Dining\",\n  //     price: 12000,\n  //   },\n  // ];\n\n  // fetch more item\n\n  const fetchMoreData = async () => {\n    // (meta)\n    // (filter)\n    if (filter !== meta.filter || extraFilter.apply) setItems([]);\n\n    getProducts({\n      page:\n        filter === meta.filter && extraFilter.apply === false ? meta.page : 1,\n      filter: filter,\n      extraFilter: JSON.stringify(extraFilter),\n    })\n      .then((data) => {\n        if (data.data.length > 0) {\n          setMeta({ ...meta, hasMore: true, page: meta.page + 1, filter });\n          if (filter !== meta.filter || extraFilter.apply) {\n            setItems(data.data);\n            setExtraFilter((old) => ({ ...old, apply: false }));\n            setMeta({ ...meta, hasMore: true, page: 2, filter });\n          } else return setItems([...new Set([...items.concat(data.data)])]);\n        } else {\n          setMeta({ ...meta, page: 1, hasMore: false, filter: \"\" });\n          setExtraFilter((old) => ({ ...old, apply: false }));\n        }\n      })\n      .catch((err) => {\n        // (err)\n      });\n  };\n\n  useEffect(() => {\n     fetchMoreData();\n  }, [filter, extraFilter.apply]);\n\n  // handle accordions\n  const handleChange = (panel) => (event, newExpanded) => {\n    setExpanded(newExpanded ? panel : false);\n  };\n\n  // addItemToCart\n  const addToCart = async (item) => {\n    // server side\n    if (state.auth.isAuth) {\n      await addCartItem({\n        CID: state.auth.CID,\n        product_id: item.SKU,\n        quantity: 1,\n      })\n        .then((response) => {\n          // for client side\n          dispatch(\n            addItem({\n              CID: state.auth.CID || \"Not Logged In\",\n              product_id: item.SKU,\n              quantity: 1,\n            })\n          );\n          return dispatch(\n            setAlert({\n              variant: \"success\",\n              message: response.data.message,\n              open: true,\n            })\n          );\n        })\n        .catch((err) => {\n          return dispatch(\n            setAlert({\n              variant: \"error\",\n              message: \"Something Went Wrong !!!\",\n              open: true,\n            })\n          );\n        });\n    } else {\n      // for client side\n      dispatch(\n        addItem({\n          CID: state.auth.CID || \"Not Logged In\",\n          product_id: item.SKU,\n          quantity: 1,\n        })\n      );\n      return dispatch(\n        setAlert({\n          variant: \"success\",\n          message: \"Item added to the cart !!!\",\n          open: true,\n        })\n      );\n    }\n  };\n\n  // removeItemFromCart\n  const removeItemFromCart = async (item) => {\n    // server side\n    if (state.auth.isAuth) {\n      await removeCartItem({\n        CID: state.auth.CID,\n        product_id: item.SKU,\n      })\n        .then((response) => {\n          // for client side\n          dispatch(removeItem(item.SKU));\n\n          return dispatch(\n            setAlert({\n              variant: \"warning\",\n              message: response.data.message,\n              open: true,\n            })\n          );\n        })\n        .catch((err) => {\n          return dispatch(\n            setAlert({\n              variant: \"error\",\n              message: \"Something Went Wrong !!!\",\n              open: true,\n            })\n          );\n        });\n    } else {\n      // for client side\n      dispatch(removeItem(item.SKU));\n\n      return dispatch(\n        setAlert({\n          variant: \"warning\",\n          message: \"Item removed from cart !!!\",\n          open: true,\n        })\n      );\n    }\n  };\n\n  const handleMartialCheck = (e) => {\n    if (e.target.checked)\n      setExtraFilter((old) => ({\n        ...old,\n        material: [...old.material, e.target.name],\n      }));\n    else\n      setExtraFilter((old) => ({\n        ...old,\n        material: old.material.filter((val) => val !== e.target.name),\n      }));\n  };\n  const filterResult = async () => {\n    await setExtraFilter((old) => ({ ...old, apply: true }));\n  };\n\n  // for No search result available\n  function NoItemFound() {\n    return (\n      <>\n        <Box p={3}>\n          <center>\n            <img width=\"30%\" src={NoProductIMG} alt=\"No More Products !!!\" />\n            <Typography variant=\"h4\">Oops !!!</Typography>\n            <Typography variant=\"h6\">No product found. </Typography>\n          </center>\n        </Box>\n      </>\n    );\n  }\n\n  // function for adding the item into the wishlist\n  async function addToWish(item) {\n    // server side\n    if (state.auth.isAuth) {\n      let response = await addWshList({\n        CID: state.auth.CID,\n        product_id: item.SKU,\n        quantity: 1,\n      });\n\n      if (response) {\n        // for client side\n        dispatch(\n          addToList({\n            CID: state.auth.CID || \"Not Logged In\",\n            product_id: item.SKU,\n            quantity: 1,\n          })\n        );\n        return dispatch(\n          setAlert({\n            variant: \"success\",\n            message: response.data.message,\n            open: true,\n          })\n        );\n      } else {\n        return dispatch(\n          setAlert({\n            variant: \"error\",\n            message: \"Something Went Wrong !!!\",\n            open: true,\n          })\n        );\n      }\n    } else {\n      // for client side\n      dispatch(\n        addToList({\n          CID: state.auth.CID || \"Not Logged In\",\n          product_id: item.SKU,\n          quantity: 1,\n        })\n      );\n      return dispatch(\n        setAlert({\n          variant: \"success\",\n          message: \"Item added to the wishlist !!!\",\n          open: true,\n        })\n      );\n    }\n  }\n\n  // removeItemFromCart\n  async function removeFromWishlist(item) {\n    // server side\n    if (state.auth.isAuth) {\n      await removeWshList({\n        CID: state.auth.CID,\n        product_id: item.SKU,\n      })\n        .then((response) => {\n          // for client side\n          dispatch(removeFromList(item.SKU));\n\n          return dispatch(\n            setAlert({\n              variant: \"warning\",\n              message: response.data.message,\n              open: true,\n            })\n          );\n        })\n        .catch((err) => {\n          return dispatch(\n            setAlert({\n              variant: \"error\",\n              message: \"Something Went Wrong !!!\",\n              open: true,\n            })\n          );\n        });\n    } else {\n      // for client side\n      dispatch(removeFromList(item.SKU));\n\n      return dispatch(\n        setAlert({\n          variant: \"warning\",\n          message: \"Item removed from wishlist !!!\",\n          open: true,\n        })\n      );\n    }\n  }\n\n  return (\n    <>\n      {/* helmet tag  */}\n      <Helmet>\n        <title>\n          {\" \"}\n          {`${\n            filter.category_name || meta.filter.category_name || \"All\"\n          } | Products`}\n        </title>\n        <meta\n          name=\"description\"\n          content=\"List of all products available under the category by Woodshala\"\n        />\n        <meta\n          name=\"keywords\"\n          content=\"list furniture,wooden furniture list,online furniture,search furniture,table,bajot,gift,chair\"\n        />\n      </Helmet>\n      {/* helmet tag ends  */}\n      {/* {(meta)} */}\n      {/* Main Container */}\n      <Grid container sx={{ padding: \"1%\" }}>\n        {/* Banner */}\n        <Grid container className=\"Banner\">\n          <Grid item xs={12}>\n            <Typography variant=\"h1\">Products</Typography>\n          </Grid>\n        </Grid>\n        {/* Banner Ends */}\n\n        {/* sub categories details  */}\n        {/* <Grid item xs={12} className=\"subInfo\">\n          <Typography align=\"center\" variant=\"h3\">\n            Furniture\n            <Typography variant=\"body1\">\n              Lorem ipsum dolor sit amet voluptatum minus! Odit incidunt quo\n              tempora praesentium distinctio obcaecati corrupti eum pariatur\n              neque consectetur.\n            </Typography>\n          </Typography>\n        </Grid> */}\n\n        {/* sub categories details ends */}\n\n        {/* carousal for sub cat */}\n        {/* <Grid item xs={12} className=\"subCatContainer\">\n          <Carousel keyBoardControl={true} ssr={true} responsive={responsive}>\n            {categories.map((item, index) => {\n              return (\n                <Box key={index} sx={{\n                  padding: \"10%\",\n                }} className=\"card \">\n                  <img src={item.image} alt={index} />\n                  <Typography\n                    sx={{\n                      fontSize: \"1.2rem\",\n                      fontWeight: \"400\",\n                      paddingTop: \"2%\",\n                    }}\n                    align=\"center\"\n                    variant=\"button\"\n                  >\n                    {item.product_title}\n                  </Typography>\n                </Box>\n              );\n            })}\n          </Carousel>\n        </Grid> */}\n        {/* carousal for sub cat ends */}\n\n        {/* filter sec */}\n        <Grid className=\"filters showFilters\" p={1} item xs={12} md={2.5}>\n          <Box className=\"applyBtn\" sx={{ padding: \"3%\" }}>\n            <Typography variant=\"h5\">Filters</Typography>\n            <Button onClick={filterResult} size=\"small\" variant=\"outlined\">\n              Apply\n            </Button>\n          </Box>\n          <Divider></Divider>\n          {/* Price filter */}\n          <Box className=\"accordion\">\n            <Accordion\n              expanded={expanded === \"panel1\"}\n              onChange={handleChange(\"panel1\")}\n            >\n              <AccordionSummary\n                className=\"summary\"\n                aria-controls=\"panel1d-content\"\n                id=\"panel1d-header\"\n                expandIcon={<ExpandMoreIcon></ExpandMoreIcon>}\n                p={0}\n              >\n                <Box className=\"applyBtn\">\n                  <Checkbox\n                    size=\"small\"\n                    disabled={extraFilter.price ? false : true}\n                    checked={extraFilter.price ? true : false}\n                    name=\"price\"\n                    onChange={() =>\n                      setExtraFilter((old) => {\n                        delete old.price;\n                        return { ...old, apply: true };\n                      })\n                    }\n                  />\n                  <Typography sx={{ fontWeight: 400 }} variant=\"body\">\n                    Price\n                  </Typography>\n                </Box>\n              </AccordionSummary>\n              <AccordionDetails sx={{ padding: \"0px 25px !important\" }}>\n                <Slider\n                  size=\"small\"\n                  getAriaLabel={() => \"Price range\"}\n                  value={extraFilter.price || [500, 5000]}\n                  onChange={(e, value) =>\n                    setExtraFilter((old) => ({ ...old, price: value }))\n                  }\n                  valueLabelDisplay=\"auto\"\n                  marks={[\n                    { value: 500, label: \"Rs.500\" },\n                    { value: 10000, label: \"Rs.50K\" },\n                  ]}\n                  max={10000}\n                  min={500}\n                  // getAriaValueText={valuetext}\n                />\n              </AccordionDetails>\n            </Accordion>\n          </Box>\n          {/* Length filter  */}\n          <Box className=\"accordion\">\n            <Accordion\n              expanded={expanded === \"panel2\"}\n              onChange={handleChange(\"panel2\")}\n            >\n              <AccordionSummary\n                className=\"summary\"\n                aria-controls=\"panel1d-content\"\n                id=\"panel1d-header\"\n                expandIcon={<ExpandMoreIcon></ExpandMoreIcon>}\n              >\n                <Box className=\"applyBtn\">\n                  <Checkbox\n                    size=\"small\"\n                    disabled={extraFilter.length ? false : true}\n                    checked={extraFilter.length ? true : false}\n                    name=\"price\"\n                    onChange={() =>\n                      setExtraFilter((old) => {\n                        delete old.length;\n                        return { ...old, apply: true };\n                      })\n                    }\n                  />\n                  <Typography sx={{ fontWeight: 400 }} variant=\"body\">\n                    Length\n                  </Typography>\n                </Box>\n              </AccordionSummary>\n              <AccordionDetails sx={{ padding: \"0px 25px !important\" }}>\n                <Slider\n                  size=\"small\"\n                  getAriaLabel={() => \"Length range\"}\n                  value={extraFilter.length || [10, 50]}\n                  onChange={(e, value) =>\n                    setExtraFilter((old) => ({ ...old, length: value }))\n                  }\n                  valueLabelDisplay=\"auto\"\n                  marks={[\n                    { value: 0, label: \"0 In\" },\n                    { value: 50, label: \"50 In\" },\n                    { value: 100, label: \"100 In\" },\n                  ]}\n                  max={100}\n                  min={0}\n                  // getAriaValueText={valuetext}\n                />\n              </AccordionDetails>\n            </Accordion>\n          </Box>\n          {/* Breadth  filter */}\n          <Box className=\"accordion\">\n            <Accordion\n              expanded={expanded === \"panel3\"}\n              onChange={handleChange(\"panel3\")}\n            >\n              <AccordionSummary\n                className=\"summary\"\n                aria-controls=\"panel1d-content\"\n                id=\"panel1d-header\"\n                expandIcon={<ExpandMoreIcon></ExpandMoreIcon>}\n              >\n                <Box className=\"applyBtn\">\n                  <Checkbox\n                    size=\"small\"\n                    disabled={extraFilter.breadth ? false : true}\n                    checked={extraFilter.breadth ? true : false}\n                    onChange={() =>\n                      setExtraFilter((old) => {\n                        delete old.breadth;\n                        return { ...old, apply: true };\n                      })\n                    }\n                  />\n                  <Typography sx={{ fontWeight: 400 }} variant=\"body\">\n                    Breadth\n                  </Typography>\n                </Box>\n              </AccordionSummary>\n              <AccordionDetails sx={{ padding: \"0px 25px !important\" }}>\n                <Slider\n                  size=\"small\"\n                  getAriaLabel={() => \"Breadth range\"}\n                  value={extraFilter.breadth || [10, 50]}\n                  onChange={(e, value) =>\n                    setExtraFilter((old) => ({ ...old, breadth: value }))\n                  }\n                  valueLabelDisplay=\"auto\"\n                  marks={[\n                    { value: 0, label: \"0 In\" },\n                    { value: 50, label: \"50 In\" },\n                    { value: 100, label: \"100 In\" },\n                  ]}\n                  max={100}\n                  min={0}\n                  // getAriaValueText={valuetext}\n                />\n              </AccordionDetails>\n            </Accordion>\n          </Box>\n          {/* // height filter */}\n          <Box className=\"accordion\">\n            <Accordion\n              expanded={expanded === \"panel4\"}\n              onChange={handleChange(\"panel4\")}\n            >\n              <AccordionSummary\n                className=\"summary\"\n                aria-controls=\"panel1d-content\"\n                id=\"panel1d-header\"\n                expandIcon={<ExpandMoreIcon></ExpandMoreIcon>}\n              >\n                <Box className=\"applyBtn\">\n                  <Checkbox\n                    size=\"small\"\n                    disabled={extraFilter.height ? false : true}\n                    checked={extraFilter.height ? true : false}\n                    onChange={() =>\n                      setExtraFilter((old) => {\n                        delete old.height;\n                        return { ...old, apply: true };\n                      })\n                    }\n                  />\n                  <Typography sx={{ fontWeight: 400 }} variant=\"body\">\n                    Height\n                  </Typography>\n                </Box>\n              </AccordionSummary>\n              <AccordionDetails sx={{ padding: \"0px 25px !important\" }}>\n                <Slider\n                  size=\"small\"\n                  getAriaLabel={() => \"Height range\"}\n                  value={extraFilter.height || [10, 50]}\n                  onChange={(e, value) =>\n                    setExtraFilter((old) => ({ ...old, height: value }))\n                  }\n                  valueLabelDisplay=\"auto\"\n                  marks={[\n                    { value: 0, label: \"0 In\" },\n                    { value: 50, label: \"50 In\" },\n                    { value: 100, label: \"100 In\" },\n                  ]}\n                  max={100}\n                  min={0}\n                  // getAriaValueText={valuetext}\n                />\n              </AccordionDetails>\n            </Accordion>\n          </Box>\n          {/* // Delivery */}\n          {/* <Box className=\"accordion\">\n            <Accordion\n              expanded={expanded === \"panel3\"}\n              onChange={handleChange(\"panel3\")}\n            >\n              <AccordionSummary\n                className=\"summary\"\n                aria-controls=\"panel1d-content\"\n                id=\"panel1d-header\"\n                expandIcon={<ExpandMoreIcon></ExpandMoreIcon>}\n              >\n                <Typography sx={{ fontWeight: 400 }} variant=\"body1\">\n                  Delivery Time\n                </Typography>\n              </AccordionSummary>\n              <AccordionDetails sx={{ padding: '0px 25px !important' }}>\n                <Slider\n                  size='small'\n                  getAriaLabel={() => 'Length range'}\n                  value={extraFilter.delivery}\n                  onChange={(e, value) => setExtraFilter(old => ({ ...old, delivery: value }))}\n                  valueLabelDisplay=\"auto\"\n                  marks={[{ value: 5, label: '5 day' }, { value: 50, label: '50 Day' }, { value: 100, label: '100 Day' }]}\n                  max={100}\n                  min={0}\n                // getAriaValueText={valuetext}\n                />\n              </AccordionDetails>\n            </Accordion>\n          </Box> */}\n          {/* Martials  */}\n          <Box className=\"accordion\">\n            <Accordion\n              expanded={expanded === \"panel5\"}\n              onChange={handleChange(\"panel5\")}\n            >\n              <AccordionSummary\n                className=\"summary\"\n                aria-controls=\"panel1d-content\"\n                id=\"panel1d-header\"\n                expandIcon={<ExpandMoreIcon></ExpandMoreIcon>}\n              >\n                <Box className=\"applyBtn\">\n                  <Checkbox\n                    size=\"small\"\n                    disabled={extraFilter.material.length > 0 ? false : true}\n                    checked={extraFilter.material.length > 0 ? true : false}\n                    onChange={() =>\n                      setExtraFilter((old) => {\n                        return { ...old, material: [], apply: true };\n                      })\n                    }\n                  />\n                  <Typography sx={{ fontWeight: 400 }} variant=\"body\">\n                    Material\n                  </Typography>\n                </Box>\n              </AccordionSummary>\n              <AccordionDetails sx={{ padding: \"0px 20px !important\" }}>\n                <FormControl component=\"fieldset\" variant=\"standard\">\n                  <FormGroup>\n                    {Materials.map((row, index) => (\n                      <FormControlLabel\n                        key={index}\n                        control={\n                          <Checkbox\n                            checked={extraFilter[row]}\n                            onChange={handleMartialCheck}\n                            name={row}\n                          />\n                        }\n                        label={row}\n                      />\n                    ))}\n                  </FormGroup>\n                </FormControl>\n              </AccordionDetails>\n            </Accordion>\n          </Box>\n        </Grid>\n        {/* filter sec ends */}\n\n        {/* Hamburger for Filter */}\n        <Grid className=\"hamFilterPanel\" item xs={12}>\n          <IconButton\n            sx={{ justifyContent: \"center\" }}\n            color=\"primary\"\n            onClick={() => {\n              setFilter(true);\n            }}\n          >\n            <FilterListOutlinedIcon sx={{ fontSize: 25 }} />\n          </IconButton>\n          <Drawer\n            anchor={\"top\"}\n            open={filterShow}\n            onClose={() => {\n              setFilter(false);\n            }}\n          >\n            <IconButton\n              sx={{ justifyContent: \"center\" }}\n              color=\"primary\"\n              onClick={() => {\n                setFilter(false);\n              }}\n            >\n              <ExpandLessOutlinedIcon sx={{ fontSize: 25 }} />\n            </IconButton>\n\n            <Grid className=\"filters\" sx={{ boxShadow: \"1\" }} item xs={12}>\n              {/* <Typography variant=\"h5\" sx={{ padding: \"2%\" }}>\n                {\" \"}\n                Filters\n              </Typography>\n              <Divider></Divider>\n              <br></br> */}\n              <Box className=\"applyBtn\" sx={{ padding: \"3%\" }}>\n                <Typography variant=\"h5\">Filters</Typography>\n                <Button onClick={filterResult} size=\"small\" variant=\"outlined\">\n                  Apply\n                </Button>\n              </Box>\n              <Divider></Divider>\n              {/* Price filter */}\n              <Box className=\"accordion\">\n                <Accordion\n                  expanded={expanded === \"panel1\"}\n                  onChange={handleChange(\"panel1\")}\n                >\n                  <AccordionSummary\n                    className=\"summary\"\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                    expandIcon={<ExpandMoreIcon></ExpandMoreIcon>}\n                    p={0}\n                  >\n                    <Box className=\"applyBtn\">\n                      <Checkbox\n                        size=\"small\"\n                        disabled={extraFilter.price ? false : true}\n                        checked={extraFilter.price ? true : false}\n                        name=\"price\"\n                        onChange={() =>\n                          setExtraFilter((old) => {\n                            delete old.price;\n                            return { ...old, apply: true };\n                          })\n                        }\n                      />\n                      <Typography sx={{ fontWeight: 400 }} variant=\"body\">\n                        Price\n                      </Typography>\n                    </Box>\n                  </AccordionSummary>\n                  <AccordionDetails sx={{ padding: \"0px 25px !important\" }}>\n                    <Slider\n                      size=\"small\"\n                      getAriaLabel={() => \"Price range\"}\n                      value={extraFilter.price || [500, 5000]}\n                      onChange={(e, value) =>\n                        setExtraFilter((old) => ({ ...old, price: value }))\n                      }\n                      valueLabelDisplay=\"auto\"\n                      marks={[\n                        { value: 500, label: \"Rs.500\" },\n                        { value: 10000, label: \"Rs.50K\" },\n                      ]}\n                      max={10000}\n                      min={500}\n                      // getAriaValueText={valuetext}\n                    />\n                  </AccordionDetails>\n                </Accordion>\n              </Box>\n              {/* Length filter  */}\n              <Box className=\"accordion\">\n                <Accordion\n                  expanded={expanded === \"panel2\"}\n                  onChange={handleChange(\"panel2\")}\n                >\n                  <AccordionSummary\n                    className=\"summary\"\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                    expandIcon={<ExpandMoreIcon></ExpandMoreIcon>}\n                  >\n                    <Box className=\"applyBtn\">\n                      <Checkbox\n                        size=\"small\"\n                        disabled={extraFilter.length ? false : true}\n                        checked={extraFilter.length ? true : false}\n                        name=\"price\"\n                        onChange={() =>\n                          setExtraFilter((old) => {\n                            delete old.length;\n                            return { ...old, apply: true };\n                          })\n                        }\n                      />\n                      <Typography sx={{ fontWeight: 400 }} variant=\"body\">\n                        Length\n                      </Typography>\n                    </Box>\n                  </AccordionSummary>\n                  <AccordionDetails sx={{ padding: \"0px 25px !important\" }}>\n                    <Slider\n                      size=\"small\"\n                      getAriaLabel={() => \"Length range\"}\n                      value={extraFilter.length || [10, 50]}\n                      onChange={(e, value) =>\n                        setExtraFilter((old) => ({ ...old, length: value }))\n                      }\n                      valueLabelDisplay=\"auto\"\n                      marks={[\n                        { value: 0, label: \"0 In\" },\n                        { value: 50, label: \"50 In\" },\n                        { value: 100, label: \"100 In\" },\n                      ]}\n                      max={100}\n                      min={0}\n                      // getAriaValueText={valuetext}\n                    />\n                  </AccordionDetails>\n                </Accordion>\n              </Box>\n              {/* Breadth  filter */}\n              <Box className=\"accordion\">\n                <Accordion\n                  expanded={expanded === \"panel3\"}\n                  onChange={handleChange(\"panel3\")}\n                >\n                  <AccordionSummary\n                    className=\"summary\"\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                    expandIcon={<ExpandMoreIcon></ExpandMoreIcon>}\n                  >\n                    <Box className=\"applyBtn\">\n                      <Checkbox\n                        size=\"small\"\n                        disabled={extraFilter.breadth ? false : true}\n                        checked={extraFilter.breadth ? true : false}\n                        onChange={() =>\n                          setExtraFilter((old) => {\n                            delete old.breadth;\n                            return { ...old, apply: true };\n                          })\n                        }\n                      />\n                      <Typography sx={{ fontWeight: 400 }} variant=\"body\">\n                        Breadth\n                      </Typography>\n                    </Box>\n                  </AccordionSummary>\n                  <AccordionDetails sx={{ padding: \"0px 25px !important\" }}>\n                    <Slider\n                      size=\"small\"\n                      getAriaLabel={() => \"Breadth range\"}\n                      value={extraFilter.breadth || [10, 50]}\n                      onChange={(e, value) =>\n                        setExtraFilter((old) => ({ ...old, breadth: value }))\n                      }\n                      valueLabelDisplay=\"auto\"\n                      marks={[\n                        { value: 0, label: \"0 In\" },\n                        { value: 50, label: \"50 In\" },\n                        { value: 100, label: \"100 In\" },\n                      ]}\n                      max={100}\n                      min={0}\n                      // getAriaValueText={valuetext}\n                    />\n                  </AccordionDetails>\n                </Accordion>\n              </Box>\n              {/* // height filter */}\n              <Box className=\"accordion\">\n                <Accordion\n                  expanded={expanded === \"panel4\"}\n                  onChange={handleChange(\"panel4\")}\n                >\n                  <AccordionSummary\n                    className=\"summary\"\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                    expandIcon={<ExpandMoreIcon></ExpandMoreIcon>}\n                  >\n                    <Box className=\"applyBtn\">\n                      <Checkbox\n                        size=\"small\"\n                        disabled={extraFilter.height ? false : true}\n                        checked={extraFilter.height ? true : false}\n                        onChange={() =>\n                          setExtraFilter((old) => {\n                            delete old.height;\n                            return { ...old, apply: true };\n                          })\n                        }\n                      />\n                      <Typography sx={{ fontWeight: 400 }} variant=\"body\">\n                        Height\n                      </Typography>\n                    </Box>\n                  </AccordionSummary>\n                  <AccordionDetails sx={{ padding: \"0px 25px !important\" }}>\n                    <Slider\n                      size=\"small\"\n                      getAriaLabel={() => \"Height range\"}\n                      value={extraFilter.height || [10, 50]}\n                      onChange={(e, value) =>\n                        setExtraFilter((old) => ({ ...old, height: value }))\n                      }\n                      valueLabelDisplay=\"auto\"\n                      marks={[\n                        { value: 0, label: \"0 In\" },\n                        { value: 50, label: \"50 In\" },\n                        { value: 100, label: \"100 In\" },\n                      ]}\n                      max={100}\n                      min={0}\n                      // getAriaValueText={valuetext}\n                    />\n                  </AccordionDetails>\n                </Accordion>\n              </Box>\n              {/* Martials  */}\n              <Box className=\"accordion\">\n                <Accordion\n                  expanded={expanded === \"panel5\"}\n                  onChange={handleChange(\"panel5\")}\n                >\n                  <AccordionSummary\n                    className=\"summary\"\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                    expandIcon={<ExpandMoreIcon></ExpandMoreIcon>}\n                  >\n                    <Box className=\"applyBtn\">\n                      <Checkbox\n                        size=\"small\"\n                        disabled={\n                          extraFilter.material.length > 0 ? false : true\n                        }\n                        checked={extraFilter.material.length > 0 ? true : false}\n                        onChange={() =>\n                          setExtraFilter((old) => {\n                            return { ...old, material: [], apply: true };\n                          })\n                        }\n                      />\n                      <Typography sx={{ fontWeight: 400 }} variant=\"body\">\n                        Material\n                      </Typography>\n                    </Box>\n                  </AccordionSummary>\n                  <AccordionDetails sx={{ padding: \"0px 20px !important\" }}>\n                    <FormControl component=\"fieldset\" variant=\"standard\">\n                      <FormGroup>\n                        {Materials.map((row, index) => (\n                          <FormControlLabel\n                            key={index}\n                            control={\n                              <Checkbox\n                                checked={extraFilter[row]}\n                                onChange={handleMartialCheck}\n                                name={row}\n                              />\n                            }\n                            label={row}\n                          />\n                        ))}\n                      </FormGroup>\n                    </FormControl>\n                  </AccordionDetails>\n                </Accordion>\n              </Box>\n            </Grid>\n          </Drawer>\n        </Grid>\n        {/* Hamburger for Filter ends */}\n\n        {items.length < 1 && (\n          <Grid item xs={12} md={9.5}>\n            <NoItemFound />\n          </Grid>\n        )}\n\n        {/* product container */}\n        <Grid className=\"productContainer\" item xs={12} md={9.5}>\n          {/* {(state.AddCartItem)} */}\n\n          <InfiniteScroll\n            dataLength={items.length}\n            next={fetchMoreData}\n            hasMore={meta.hasMore}\n            // style={styleStroller}\n            loader={\n              <center style={{ padding: \"10px\" }}>\n                <CircularProgress />\n              </center>\n            }\n          >\n            <Box className=\"innerProductWrap\">\n              {items.map((item, index) => {\n                return (\n                  <Box\n                    key={index}\n                    className=\"productCard\"\n                    sx={{ boxShadow: 2, maxHeight: \"100%\", mb: 3 }}\n                  >\n                    <Grid container>\n                      {/* {item.discount_limit > 0 && (\n                        <Grid className=\"discount\" item xs={12}>\n                          <Box>\n                            <Typography\n                              variant=\"body\"\n                              sx={{ fontWeight: \"400\" }}\n                            >\n                              {item.discount_limit}% Off\n                            </Typography>\n                          </Box>\n                        </Grid>\n                      )} */}\n                      <Grid\n                        item\n                        xs={12}\n                        onClick={() =>\n                          history(\n                            `/details/${item.SKU}/${\n                              item.product_title || \"No Title\"\n                            }/${item.category_name}`\n                          )\n                        }\n                      >\n                        <LazyLoadImage\n                          src={\n                            item.featured_image ||\n                            item.product_image[0] ||\n                            defaultIMG\n                          }\n                          PlaceholderSrc={defaultIMG}\n                          effect=\"blur\"\n                          alt={item.product_title}\n                        />\n                        {/* {() ? <img src={item.featured_image || item.product_image[0] || defaultIMG} alt=\"product_Images\" /> : <CircularProgress/> } */}\n                      </Grid>\n                      <Grid\n                        item\n                        xs={8.8}\n                        onClick={() =>\n                          history(\n                            `/details/${item.SKU}/${item.product_title}/${item.category_name}`\n                          )\n                        }\n                      >\n                        <Box className=\"productInfo\">\n                          <Typography\n                            variant=\"h5\"\n                            sx={{ fontWeight: \"bolder\" }}\n                            className=\"title\"\n                          >\n                            {item.product_title}\n                          </Typography>\n                        </Box>\n                      </Grid>\n                      <Grid item xs={3.2}>\n                        <Box className=\"buttonAction\" sx={{ display: \"flex\" }}>\n                          {/* // CART */}\n                          {state.cart.items.filter((row) => {\n                            return row.product_id === item.SKU;\n                          }).length > 0 ? (\n                            <IconButton\n                              onClick={() => removeItemFromCart(item)}\n                            >\n                              <ShoppingCartIcon />\n                            </IconButton>\n                          ) : (\n                            <IconButton onClick={() => addToCart(item)}>\n                              <AddShoppingCartOutlinedIcon></AddShoppingCartOutlinedIcon>\n                            </IconButton>\n                          )}\n                          {/* // WISHLIST */}\n                          {state.wishlist.items.filter((row) => {\n                            return row.product_id === item.SKU;\n                          }).length > 0 ? (\n                            <IconButton\n                              onClick={() => removeFromWishlist(item)}\n                            >\n                              <FavoriteIcon />\n                            </IconButton>\n                          ) : (\n                            <IconButton onClick={() => addToWish(item)}>\n                              <FavoriteBorderOutlinedIcon />\n                            </IconButton>\n                          )}\n                        </Box>\n                      </Grid>\n                      <Grid\n                        onClick={() =>\n                          history(\n                            `/details/${item.SKU}/${item.product_title}/${item.category_name}`\n                          )\n                        }\n                        item\n                        xs={12}\n                      >\n                        <Box className=\"productInfo\">\n                          <Typography\n                            sx={{ mt: 0.5, mb: 1 }}\n                            className=\"title\"\n                            variant=\"body1\"\n                          >\n                            {item.product_description}\n                          </Typography>\n                          <Typography\n                            color=\"text.secondary\"\n                            sx={{ fontWeight: \"bolder\" }}\n                            variant=\"h5\"\n                          >\n                            <Price item={item} />\n                          </Typography>\n                        </Box>\n                      </Grid>\n                    </Grid>\n                  </Box>\n                );\n              })}\n            </Box>\n          </InfiniteScroll>\n        </Grid>\n      </Grid>\n      {/* Main Container Ends */}\n    </>\n  );\n}\n\nfunction Price({ item }) {\n  const [value, setValue] = useState(0);\n\n  function setPrice() {\n    if (item.categories.length > 0) {\n      if (\n        item.categories[0].discount_limit &&\n        item.categories[0].discount_limit > 0 &&\n        item.categories[0].discount_limit < item.discount_limit\n      )\n        // checking every possible value\n        return setValue(\n          item.selling_price -\n            (item.selling_price / 100) * item.categories[0].discount_limit\n        );\n      else\n        return setValue(\n          item.selling_price - (item.selling_price / 100) * item.discount_limit\n        );\n    }\n  }\n\n  useEffect(() => {\n    setPrice();\n  }, [item]);\n\n  return (\n    <>\n      {value.toLocaleString(\"us-Rs\", {\n        style: \"currency\",\n        currency: \"INR\",\n      })}\n    </>\n  );\n}\n"],"names":["ProductList","props","useState","Materials","setMaterials","state","useSelector","dispatch","useDispatch","history","filter","useParams","apply","material","extraFilter","setExtraFilter","items","setItems","expanded","setExpanded","hasMore","page","meta","setMeta","filterShow","setFilter","useEffect","getMartialList","then","row","data","map","item","primaryMaterial_name","auth","isAuth","fetchMoreData","getProducts","JSON","stringify","length","Set","concat","old","catch","err","handleChange","panel","event","newExpanded","addToCart","addCartItem","CID","product_id","SKU","quantity","response","addItem","setAlert","variant","message","open","removeItemFromCart","removeCartItem","removeItem","handleMartialCheck","e","target","checked","name","val","filterResult","NoItemFound","Box","p","width","src","NoProductIMG","alt","Typography","addWshList","addToList","removeWshList","removeFromList","Helmet","category_name","content","Grid","container","sx","padding","className","xs","md","Button","onClick","size","Divider","Accordion","onChange","AccordionSummary","id","expandIcon","ExpandMore","Checkbox","disabled","price","fontWeight","AccordionDetails","Slider","getAriaLabel","value","valueLabelDisplay","marks","label","max","min","breadth","height","FormControl","component","FormGroup","index","FormControlLabel","control","IconButton","justifyContent","color","FilterListOutlined","fontSize","Drawer","anchor","onClose","ExpandLessOutlined","boxShadow","dataLength","next","loader","style","CircularProgress","maxHeight","mb","product_title","LazyLoadImage","featured_image","product_image","defaultIMG","PlaceholderSrc","effect","display","cart","ShoppingCart","AddShoppingCartOutlined","wishlist","removeFromWishlist","Favorite","addToWish","FavoriteBorderOutlined","mt","product_description","Price","setValue","categories","discount_limit","selling_price","setPrice","toLocaleString","currency"],"sourceRoot":""}